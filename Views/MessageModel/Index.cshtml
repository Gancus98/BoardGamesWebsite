@*@model IEnumerable<BoardGame.Models.UserModels>*@
@model BoardGame.Models.MessageFriendViewModels

@{
    ViewBag.Title = "Index";
}

@{ var headerMetadata = Model.Friends.FirstOrDefault();}


    <div class="jumbotron " style="min-height: 100vh;">
        <h2 class="mb-5">Chose friend to start chat</h2>
        @foreach (var item in Model.Friends)
        {
            string selectedRow = "";
            if (item.ID == ViewBag.FriendId)
            {
                selectedRow = "bg-info";
            }
            <a class="row selectedrow @selectedRow rounded m-3 p-2 text-decoration-none bg-primary border-dark" href="@Url.Action("Index","MessageModel", new { id = item.ID })">
                <div class="col-6 my-auto">
                    <h3 class="my-auto">@Html.DisplayFor(modelItem => item.MyObservations.FullName)</h3>
                </div>
                <div class="col-6 my-auto">
                    <img class="img-thumbnail my-auto float-right rounded border-0" style="max-width: 80px" src="@Html.DisplayFor(modelItem => item.MyObservations.Photo)" alt="Image">
                </div>
            </a>
        }

        <hr class="p-5 border-0"></hr>
        @foreach (var item in Model.Friends)
        {
            if (item.ID == ViewBag.FriendId)
            {
                <div class="row mb-3">
                    <div class="col-2 float-right">
                        <img class="img-thumbnail float-right" style="max-width: " src="@Html.DisplayFor(modelItem => item.MyObservations.Photo)" alt="Image">
                    </div>
                    <div class="col-9 mb-2">
                        <h2>Conversation with</h2>
                        <h2>@Html.DisplayFor(modelItem => item.MyObservations.FullName)</h2>
                    </div>
                </div>
            }
        }
        @if (Model.Messages != null)
        {
            var userEmail = User.Identity.Name;
            BoardGame.DAL.OnTheBoardContext db = new BoardGame.DAL.OnTheBoardContext();
            var query1 = db.User.Where(i => i.Email == userEmail);
            BoardGame.Models.UserModels user1 = query1.Single();

    
        <div class="overflow-auto" style="max-height: 300px">
            @foreach (var item in Model.Messages)
            {
                if (item.SenderUser.ID == user1.ID)
                {
                    <div class="row bg-primary m-2  rounded-lg ">
                        <div class="col-2 my-auto">
                            <p class="float-left  my-auto">@Html.DisplayFor(modelItem => item.PostDate.Hour):@Html.DisplayFor(modelItem => item.PostDate.Minute)</p>
                        </div>
                        <div class="col-9 my-auto">
                            <p class="float-right  my-auto" style="margin: -2vw;">@Html.DisplayFor(modelItem => item.Contents)</p>
                        </div>
                        <div class="col-1 my-auto">
                            <img class="float-right border-white bg-primary p-1" style="border-radius: 50%; width:2vw; height: 2vw; object-fit: cover;"
                                 src="@Html.DisplayFor(modelItem => item.SenderUser.Photo)" alt="Image">
                        </div>
                    </div>
                }
                else
                {
                    <div class="row bg-dark m-2 rounded-lg">
                        <div class="col-1 my-auto">
                            <img class="float-left  p-1" style="border-radius: 50%; width:2vw; height: 2vw; object-fit: cover;"
                                 src="@Html.DisplayFor(modelItem => item.SenderUser.Photo)" alt="Image">
                        </div>
                        <div class="col-9  my-auto">
                            <p class="float-left my-auto" style="margin: -2vw;">@Html.DisplayFor(modelItem => item.Contents)</p>
                        </div>
                        <div class="col-2 my-auto">
                            <p class="float-right  my-auto">@Html.DisplayFor(modelItem => item.PostDate.Hour):@Html.DisplayFor(modelItem => item.PostDate.Minute)</p>
                        </div>
                    </div>
                }
            }
        </div>
        using (Html.BeginForm("CreateExacly", "MessageModel", new { id = ViewBag.FriendId }))
        {
            <input class="form-control mr-3" placeholder="Type your message here..." name="inputarea" rows="3"></input>
            <input class="border-0 float-right pr-4 pl-4 pt-2 pb-2 mt-2 bg-success rounded" type="submit" value="Send" />
        }

        }
    </div>


        @*@{
        var userEmail = User.Identity.Name;
            <p class="mb-4"></p>
        foreach (var item in Model.Friends)
        {
        var userEmailModel = Html.DisplayFor(modelItem => item.MyObservations.Email).ToString();
        if (userEmail == userEmailModel)*@
        @*{
            <p>@Html.DisplayFor(modelItem => item.MyFollowers.FullName)</p>
        }*@


        @*<div class="row col-12">
            <div class="card mb-3 border-primary" style="width: 100vw;">
                <div class="row no-gutters">
                    <div class="col-md-3">
                        <img class="img-thumbnail rounded-lg m-2" src="@Html.DisplayFor(modelItem => item.Author.Photo)" class="card-img" alt="Image">
                    </div>
                    <div class="col-md-7">
                        <div class="card-body">
                            <h3 class="card-title">@Html.DisplayFor(modelItem => item.Description)</h3>
                            <p class="card-text">Author: @Html.DisplayFor(modelItem => item.Author.FullName)</p>
                            <p class="card-text">City: @Html.DisplayFor(modelItem => item.City)</p>
                            <p class="card-text">Date: @Html.DisplayFor(modelItem => item.Date)</p>
                            <p class="card-text">Max players: @Html.DisplayFor(modelItem => item.MaxPlayer)</p>

                        </div>
                        <a class="stretched-link" href="@Url.Action("Details","AdvertisementModel", new { id = item.ID })"></a>
                    </div>

                    <div class="col-md-2">
                        @if (userEmailModel == userEmail)
                        {
                            <a class="btn-danger m-3 float-right p-2" href="@Url.Action("Delete","AdvertisementModel", new { id = item.ID })">Delete</a>
                        }
                    </div>
                </div>
            </div>


        </div>*@


        @*//   }
        //}*@




        @*<h2>Users database:</h2>

        <p>
            @Html.ActionLink("Create New", "Create")
        </p>

        @{ var headerMetadata = Model.Users.FirstOrDefault();}

        <table class="table">

            <tr>
                <th>
                    @Html.DisplayNameFor(model => headerMetadata.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => headerMetadata.Surname)
                </th>
                <th>
                    @Html.DisplayNameFor(model => headerMetadata.Phone)
                </th>
                <th>
                    @Html.DisplayNameFor(model => headerMetadata.Email)
                </th>
                <th>
                    @Html.DisplayNameFor(model => headerMetadata.Photo)
                </th>
                <th>
                    @Html.DisplayNameFor(model => headerMetadata.IsActive)
                </th>
                <th></th>
            </tr>


            @foreach (var item in Model.Users)
            {
                string selectedRow = "";
                if (item.ID == ViewBag.UserId)
                {
                    selectedRow = "success";
                }
                <tr class="@selectedRow">
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Surname)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Phone)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Email)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Photo)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.IsActive)
                    </td>
                    <td>
                        @Html.ActionLink("Select", "Index", new { id = item.ID }) |
                        @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
                        @Html.ActionLink("Details", "Details", new { id = item.ID }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.ID })
                    </td>
                </tr>
            }

        </table>



        @if (Model.Reviews != null)
        {

            var headerMetadataReview = Model.Reviews.FirstOrDefault();
            <table class="table">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => headerMetadataReview.BoardGame)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => headerMetadataReview.Title)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => headerMetadataReview.Contents)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => headerMetadataReview.DateOfPublication)
                    </th>
                </tr>

                @foreach (var item in Model.Reviews)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.BoardGame.Title)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Title)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Contents)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.DateOfPublication)
                        </td>
                        <td>
                            @Html.ActionLink("Select", "Index", new { id = item.ID }) |
                            @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
                            @Html.ActionLink("Details", "Details", new { id = item.ID }) |
                            @Html.ActionLink("Delete", "Delete", new { id = item.ID })
                        </td>
                    </tr>
                }
            </table>
        }*@

