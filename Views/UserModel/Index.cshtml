@model IEnumerable<BoardGame.Models.UserModels>
@*@model BoardGame.Models.BoardViewModels*@

@{
    ViewBag.Title = "Index";
}
    <div class="jumbotron " style="min-height: 100vh;">
        @using (Html.BeginForm())
        {
            <h3 class="">
                Find user by surname: @Html.TextBox("SearchString")
                <input class="btn-primary border-0 rounded" type="submit" value="Search" />
            </h3>
        }

        <h2>Users database:</h2>

        <table class="table">

            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Surname)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Phone)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Email)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Photo)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.IsActive)
                </th>
                <th></th>
            </tr>


            @foreach (var item in Model)
            {
                string selectedRow = "";
                if (item.ID == ViewBag.UserId)
                {
                    selectedRow = "success";
                }
                <tr class="@selectedRow">
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Surname)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Phone)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Email)
                    </td>
                    <td>
                        <img class="img-thumbnail" style="max-height: 100px;" src="@Html.DisplayFor(modelItem => item.Photo)" alt="Alternate Text" />
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.IsActive)
                    </td>
                    <td>
                        @*@Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
                        @Html.ActionLink("Details", "Details", new { id = item.ID }) |
                        @Html.ActionLink("DeleteConfirmed", "Account", new { id = item.ID })
                        <a href="@Url.Action("DeleteConfirmed", "Account")"> superdelete</a>*@
                        <div class="delete-section">
                            <a class="delete-link btn-warning p-2" href="@Url.Action("Delete", new {id = item.ID})">Delete</a>
                            <div class="btn-danger p-2 delete-confirm" style="display:none" data-delete-id="@item.ID">Confirm Delete</div>
                        </div>
                    </td>
                </tr>
            }

        </table>


    </div>

@section scripts{
    <script type="text/javascript">
    $(function () {
        $("a.delete-link").click(function () {
            var deleteLink = $(this);
            deleteLink.hide();
            var confirmButton = deleteLink.siblings(".delete-confirm");
            confirmButton.show();

            var cancelDelete =  function () {
                removeEvents();
                showDeleteLink();
            };

            var deleteItem = function () {
                removeEvents();
                confirmButton.hide();
                $.post(
                    '@Url.Action("Delete")',
                    AddAntiForgeryToken({ id: confirmButton.attr('data-delete-id') }))
                   .done(function () {
                       var parentRow = deleteLink.parents("tr:first");
                       parentRow.fadeOut('fast', function () {
                           parentRow.remove();
                       });
                   }).fail(function (data) {
                       alert("error");
                   });
                return false;
            };

            var removeEvents = function () {
                confirmButton.off("click", deleteItem);
                $(document).on("click", cancelDelete);
                $(document).off("keypress", onKeyPress);
            };

            var showDeleteLink = function () {
                confirmButton.hide();
                deleteLink.show();
            };

            var onKeyPress = function (e) {
                //Cancel if escape key pressed
                if (e.which == 27) {
                    cancelDelete();
                }
            };

            confirmButton.on("click", deleteItem);
            $(document).on("click", cancelDelete);
            $(document).on("keypress", onKeyPress);

            return false;
        });

        AddAntiForgeryToken = function (data) {
            data.__RequestVerificationToken = $('input[name=__RequestVerificationToken]').val();
            return data;
        };
    });
    </script>
}